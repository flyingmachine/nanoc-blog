#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

require "rubygems"
require "bundler/setup"
Bundler.require(:default)

require "lib/rule_helper"
require "lib/static"
require 'content/assets/source/custom_tags'

# blog
compile '/atom/' do
  filter :haml
end

route '/atom/' do
  '/atom.xml'
end


compile '/static/*' do
end

route '/static/*' do
  item.identifier.gsub(/static/, 'assets')[0..-2]
end

compile '*' do
  if item.binary? ||
      item.identifier.include?("/source/") ||
      item.attributes[:draft] ||
      item.attributes[:filename] =~ /scss$/ ||
      item.identifier.include?("#") # emacs tmp file
    # don’t filter binary items
    # don't output drafts
  else
    item_layout = "default"
    use_layout = false
    
    case item.attributes[:filename]
    when /haml$/ then filter :haml; use_layout = true
    when /textile$/ then filter :redcloth; use_layout = true
      #when /(markdown|md)$/ then filter :redcarpet, :options => {:fenced_code_blocks => true}, :renderer => RedcarpetSyntaxHighlighter; use_layout = true
    when /(markdown|md)$/ then filter :redcarpet; use_layout = true
      
    when /coffee$/ then filter :coffeescript;
    end

    use_layout = false if item.attributes[:nolayout]

    if use_layout
      layout item_layout
    end
    
  end
end

route '/assets/javascripts/*' do
  unless item.identifier.include?("#") # emacs tmp file
    "/javascripts/#{basename(item.attributes[:filename])}.js"
  end
end

route '/assets/stylesheets/*' do
  
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension].to_s
  elsif item.attributes[:draft]
    # don't output drafts
  else
    # Write item with identifier /foo/ to /foo/index.html
    if item.identifier.include? "/source/"
      item.identifier.chop + ".rb"
    else
      item.identifier + 'index.html'
    end
  end
end

layout '*', :haml
